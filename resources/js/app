// console.log("Hello from app.js");
import axios from 'axios'
import Noty from 'noty'
// const initAdmin = require('./admin')
import  initAdmin  from './admin'
import moment from 'moment'


let addToCart = document.querySelectorAll('.add-to-cart')
let cartCounter = document.querySelector('#cartCounter')
function updateCart(cupcake){
    //AJAX CALLS USING AXIOS
    axios.post('/update-cart',cupcake).then(res=>{
        console.log(res)
        cartCounter.innerText= res.data.totalQty
        // new Noty({
        //     type: 'success',
        //     text: 'Item added to cart'
        // }).show();
        // toastr.success("Items added successfully");
        alert('Items added succesfully!!!');
    })
}
addToCart.forEach((btn)=>{
    btn.addEventListener('click',(e)=>{
        console.log(e)
        let cupcake = JSON.parse(btn.dataset.cupcake)
        updateCart(cupcake)
        // console.log(pizza)
    })
})

//Remove alert message in 2sec
const alertMsg = document.querySelector('#success-alert')
if(alertMsg){
    setTimeout(() =>{
        alertMsg.remove()
    }, 2000)
}

initAdmin();

//Dynamic status Changing
let statuses = document.querySelectorAll('.status_line')
let hiddenInput = document.querySelector('#hiddenInput')
let order = hiddenInput ? hiddenInput.value : null
order = JSON.parse(order)
let time = document.createElement('small')

function updateStatus(order) {
    statuses.forEach((status) => {
        status.classList.remove('step-completed')
        status.classList.remove('current')
    })
    let stepCompleted = true;
    statuses.forEach((status) => {
       let dataProp = status.dataset.status
       if(stepCompleted) {
            status.classList.add('step-completed')
       }
       if(dataProp === order.status) {
            stepCompleted = false
            time.innerText = moment(order.updatedAt).format('hh:mm A')
            status.appendChild(time)
           if(status.nextElementSibling) {
            status.nextElementSibling.classList.add('current')
           }
       }
    })

}

updateStatus(order);
initAdmin();
// Socket
// let socket = io()

// Join
// if(order) {
//     socket.emit('join', `order_${order._id}`)
// }
// let adminAreaPath = window.location.pathname
// if(adminAreaPath.includes('admin')) {
//     initAdmin(socket)
//     socket.emit('join', 'adminRoom')
// }


// socket.on('orderUpdated', (data) => {
//     const updatedOrder = { ...order }
//     updatedOrder.updatedAt = moment().format()
//     updatedOrder.status = data.status
//     updateStatus(updatedOrder)
//     new Noty({
//         type: 'success',
//         timeout: 1000,
//         text: 'Order updated',
//         progressBar: false,
//     }).show();
//     // alert("Order updated")
// }) 
